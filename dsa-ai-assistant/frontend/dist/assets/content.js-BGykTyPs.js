(function(){alert("DSA AI Assistant content script loaded!");console.log("DSA AI Assistant content script loaded on:",window.location.href);window.debugDSAExtraction=function(){console.log("=== DSA AI Assistant Debug Mode ==="),console.log("Current URL:",window.location.href),console.log("All H1 elements:"),document.querySelectorAll("h1").forEach((t,c)=>{console.log(`${c+1}. Text: "${t.textContent.trim()}" | Classes: "${t.className}"`)}),console.log('Elements with "title" in class:'),document.querySelectorAll('[class*="title"]').forEach((t,c)=>{console.log(`${c+1}. Tag: ${t.tagName} | Classes: "${t.className}" | Text: "${t.textContent.trim().substring(0,50)}"`)}),console.log('Elements with "description" or "content" in class:'),document.querySelectorAll('[class*="description"], [class*="content"]').forEach((t,c)=>{console.log(`${c+1}. Tag: ${t.tagName} | Classes: "${t.className}" | Text: "${t.textContent.trim().substring(0,100)}"`)}),console.log("Attempting extraction...");const o=a();return console.log("Extraction result:",o),o};chrome.runtime.onMessage.addListener((o,t,c)=>{if(console.log("Content script received message:",o),o.action==="getProblemData"){if(console.log("Extracting problem data..."),window.location.href.includes("leetcode.com"))return d().then(s=>{console.log("Extracted data:",s),c({problemData:s})}),!0;{const s=a();console.log("Extracted data:",s),c({problemData:s})}}});function a(){const o=window.location.href;return console.log("Extracting from URL:",o),o.includes("leetcode.com")?i():o.includes("geeksforgeeks.org")?u():(console.log("Unsupported platform:",o),null)}function d(){return new Promise(o=>{let s=0;const e=()=>{const l=document.querySelector('.elfjS[data-track-load="description_content"]');if(l&&l.textContent.trim().length>0){console.log("Description content found after waiting:",s,"ms"),o(i());return}if(s+=100,s>=5e3){console.log("Timeout waiting for description content"),o(i());return}setTimeout(e,100)};e()})}function i(){try{console.log("Extracting LeetCode data...");const o=['[data-cy="question-title"]',".mr-2.text-label-1","h1",".text-title-large",'[data-testid="question-title"]',".question-title",'h1[class*="title"]',".problem-title",'a[href*="/problems/"]'];let t=null;for(const l of o)if(t=document.querySelector(l),t){console.log("Found title with selector:",l);break}const c=t?t.textContent.trim():"Unknown Problem";console.log("Found title:",c);const s=document.querySelector('.elfjS[data-track-load="description_content"]');let e="";if(s)console.log('Found description element with .elfjS[data-track-load="description_content"]'),e=s.innerText||s.textContent||"",e=e.trim(),console.log("Raw description length:",e.length),console.log("Description preview:",e.substring(0,200)),e.length>1e3&&(e=e.substring(0,1e3)+"...");else{console.log('No description element found with .elfjS[data-track-load="description_content"]');const l=['[data-cy="question-content"]',".content__u3I1",".question-content__JfgR",".description__24sA",'[data-testid="question-content"]',".problem-description",".content",".description",'[class*="description"]','[class*="content"]'];let n=null;for(const r of l)if(n=document.querySelector(r),n){console.log("Found description with fallback selector:",r);break}n?(e=n.innerText||n.textContent||"",e=e.trim(),e.length>1e3&&(e=e.substring(0,1e3)+"...")):(console.log("No description element found with any selector"),document.querySelectorAll("*").forEach(r=>{r.className&&(r.className.includes("description")||r.className.includes("content"))&&console.log("Found element:",r.tagName,r.className,r.textContent.substring(0,50))}))}return console.log("Final description length:",e.length),{title:c,description:e,platform:"LeetCode",url:window.location.href}}catch(o){return console.error("Error extracting LeetCode data:",o),null}}function u(){try{console.log("Extracting GeeksForGeeks data...");const o=[".problem-tab h1",".gfg-practice-problem-head h1","h1",".problem-title",'[class*="title"]',".title"];let t=null;for(const n of o)if(t=document.querySelector(n),t){console.log("Found title with selector:",n);break}const c=t?t.textContent.trim():"Unknown Problem";console.log("Found title:",c);const s=[".problem-tab .content",".gfg-practice-problem-content",".problem-description",".content",".description",'[class*="description"]','[class*="content"]'];let e=null;for(const n of s)if(e=document.querySelector(n),e){console.log("Found description with selector:",n);break}let l="";return e?(l=e.innerText||e.textContent||"",l=l.trim(),l.length>1e3&&(l=l.substring(0,1e3)+"...")):(console.log("No description element found. Available elements:"),document.querySelectorAll("*").forEach(n=>{n.className&&(n.className.includes("description")||n.className.includes("content"))&&console.log("Found element:",n.tagName,n.className,n.textContent.substring(0,50))})),console.log("Found description length:",l.length),{title:c,description:l,platform:"GeeksForGeeks",url:window.location.href}}catch(o){return console.error("Error extracting GeeksForGeeks data:",o),null}}console.log("DSA AI Assistant content script loaded");
})()
